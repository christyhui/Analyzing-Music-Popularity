tracks$mode = replace(tracks$mode, tracks$mode == 0, "Minor")
unique(tracks$mode)
tracks$mode = as.factor(tracks$mode) # factor so easier to work with later
ggplot(tracks, aes(x = instrumentalness)) + geom_density()
ggplot(tracks, aes(x = instrumentalness)) + geom_density()
head(tracks$instrumentalness)
ggplot(tracks, aes(x = instrumentalness)) + geom_density()
head(tracks$instrumentalness)
ggplot(tracks, aes(time_signature)) + geom_density()
unique(tracks$time_signature)
sum(tracks$time_signature == 0)
sum(tracks$time_signature == 2)
sum(tracks$time_signature == 1)
tracks$popularity
ggplot(tracks, aes(x = popularity)) + geom_density()
unique(tracks$popularity)
length(unique(tracks$popularity))
unique(tracks$popularity)
0 %in% unique(tracks$popularity)
unique(tracks$popularity)
unique(tracks$time_signature)
ggplot(tracks, aes(x = popularity)) + geom_density()
unique(tracks$popularity)
names(tracks)
rm(list = ls())
tracks = read.csv("tracks.csv")
names(tracks)
dim(tracks)
sum(is.na(tracks))
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
tracks = tracks[, !names(tracks) %in% "id"] # drop column names by their names
names(tracks)
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
numeric.cols = names(tracks)[column.types != "character"]
numeric.cols
library(ggplot2)
library(gridExtra)
grid.arrange(
ggplot(tracks, aes(x = duration_ms)) + geom_density(),
ggplot(tracks, aes(x = explicit)) + geom_density(),
ggplot(tracks, aes(x = danceability)) + geom_density(),
ggplot(tracks, aes(x = energy)) + geom_density(),
ggplot(tracks, aes(x = key)) + geom_density(),
ggplot(tracks, aes(x = loudness)) + geom_density(),
ggplot(tracks, aes(x = mode)) + geom_density(),
ggplot(tracks, aes(x = speechiness)) + geom_density(),
ggplot(tracks, aes(x = acousticness)) + geom_density(),
ggplot(tracks, aes(x = instrumentalness)) + geom_density(),
ggplot(tracks, aes(x = liveness)) + geom_density(),
ggplot(tracks, aes(x = valence)) + geom_density(),
ggplot(tracks, aes(x = tempo)) + geom_density(),
ggplot(tracks, aes(x = time_signature)) + geom_density())
ggplot(tracks, aes(x = explicit)) + geom_density()
unique(tracks$explicit)
tracks$explicit = replace(tracks$explicit, tracks$explicit != 0, "Explicit")
tracks$explicit = replace(tracks$explicit, tracks$explicit == 0, "Not Explicit")
unique(tracks$explicit)
tracks$explicit = as.factor(tracks$explicit) # factor so easier to work with later
ggplot(tracks, aes(x = key)) + geom_density()
unique(tracks$key)
tracks$key = as.factor(as.character(tracks$key))
unique(tracks$key)
typeof(tracks$key)
knitr::opts_chunk$set(echo = TRUE)
tracks = read.csv("tracks.csv")
names(tracks)
dim(tracks)
sum(is.na(tracks))
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
tracks = tracks[, !names(tracks) %in% "id"] # drop column names by their names
names(tracks)
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
numeric.cols = names(tracks)[column.types != "character"]
numeric.cols
library(ggplot2)
library(gridExtra)
grid.arrange(
ggplot(tracks, aes(x = duration_ms)) + geom_density(),
ggplot(tracks, aes(x = explicit)) + geom_density(),
ggplot(tracks, aes(x = danceability)) + geom_density(),
ggplot(tracks, aes(x = energy)) + geom_density(),
ggplot(tracks, aes(x = key)) + geom_density(),
ggplot(tracks, aes(x = loudness)) + geom_density(),
ggplot(tracks, aes(x = mode)) + geom_density(),
ggplot(tracks, aes(x = speechiness)) + geom_density(),
ggplot(tracks, aes(x = acousticness)) + geom_density(),
ggplot(tracks, aes(x = instrumentalness)) + geom_density(),
ggplot(tracks, aes(x = liveness)) + geom_density(),
ggplot(tracks, aes(x = valence)) + geom_density(),
ggplot(tracks, aes(x = tempo)) + geom_density(),
ggplot(tracks, aes(x = time_signature)) + geom_density())
ggplot(tracks, aes(x = explicit)) + geom_density()
unique(tracks$explicit)
tracks$explicit = replace(tracks$explicit, tracks$explicit != 0, "Explicit")
tracks$explicit = replace(tracks$explicit, tracks$explicit == 0, "Not Explicit")
unique(tracks$explicit)
tracks$explicit = as.factor(tracks$explicit) # factor so easier to work with later
ggplot(tracks, aes(x = key)) + geom_density()
tracks$key = as.factor(tracks$key)
unique(tracks$key)
typeof(tracks$key)
is.factor(tracks$key)
ggplot(tracks, aes(x = mode)) + geom_density()
unique(tracks$mode)
unique(tracks$key)
tracks$mode = replace(tracks$mode, tracks$mode != 0, "Major")
tracks$mode = replace(tracks$mode, tracks$mode == 0, "Minor")
unique(tracks$mode)
tracks$mode = as.factor(tracks$mode) # factor so easier to work with later
ggplot(tracks, aes(x = instrumentalness)) + geom_density()
head(tracks$instrumentalness)
ggplot(tracks, aes(time_signature)) + geom_density()
ggplot(tracks, aes(x = popularity)) + geom_density()
unique(tracks$popularity)
table(tracks$popularity)
ggplot(tracks, aes(x = popularity)) + geom_density()
table(tracks$popularity)
table(tracks$popularity)
tracks$popularity == c(90, 91, 92, 93, 94)]
tracks$popularity == c(90, 91, 92, 93, 94)
tracks$popularity == 100
tracks$artists[tracks$popularity == 90:100)]
tracks$artists[tracks$popularity == 90:100]
tracks$artists[tracks$popularity == 91:100]
tracks$artists[tracks$popularity == 89:100]
tracks$artists[tracks$popularity == 100]
View(tracks)
c(5, 6, 7)[c(7, 8, 9) == 9]
tracks$artists[tracks$popularity == 100]
tracks$artists[tracks$popularity == 90:100]
tracks$artists[tracks$popularity == 91:100]
tracks$artists[tracks$popularity == 90:100]
tracks$artists[tracks$popularity == 89:100]
tracks$artists[tracks$popularity == 90:100]
tracks$artists[tracks$popularity == 89:100]
tracks$artists[tracks$popularity == 99]
tracks$artists[tracks$popularity == 97]
tracks$artists[tracks$popularity == c(97, 98, 99)]
tracks$artists[tracks$popularity == c(97)]
tracks$artists[tracks$popularity == c(97)]
tracks$artists[tracks$popularity == c(98)]
tracks$artists[tracks$popularity == c(99)]
tracks$artists[tracks$popularity == c(100)]
tracks$artists[tracks$popularity == c(97, 98, 99, 100)]
tracks$artists[tracks$popularity == c(97, 98, 99, 100)]
tracks$artists[tracks$popularity == 97:100]
tracks$artists[tracks$popularity == 97]
tracks$artists[tracks$popularity == 98]
tracks$artists[tracks$popularity == 99]
tracks$artists[tracks$popularity == 100]
tracks$artists[tracks$popularity == 97:100]
tracks$artists[tracks$popularity == 90:100]
tracks$artists[tracks$popularity == 97:100]
tracks$artists[tracks$popularity == 97]
tracks$artists[tracks$popularity == 98]
tracks$artists[tracks$popularity == 99]
tracks$artists[tracks$popularity == 100]
tracks$artists[tracks$popularity == 97:100]
tracks$artists[tracks$popularity == 97]
tracks$artists[tracks$popularity == 98]
tracks$artists[tracks$popularity == 99]
tracks$artists[tracks$popularity == 100]
tracks$artists[tracks$popularity == 97:100]
tracks$artists[tracks$popularity == (97:100)]
tracks$artists[tracks$popularity == 96:100]
typeof(90:100)
tracks$artists[tracks$popularity %in% 96:100]
tracks$artists[tracks$popularity %in% 97:100]
tracks$name[tracks$popularity]
tracks$artists[tracks$popularity %in% 90:100]
tracks$name[tracks$popularity %in% 90:100]
tracks$name[tracks$popularity %in% 100]
tracks$name[tracks$popularity %in% 100]
tracks$name[tracks$popularity %in% 90:100]
tracks$name[tracks$popularity %in% 90]
tracks$name[tracks$popularity %in% 90:100]
tracks$artists[tracks$popularity %in% 90:100]
tracks$name[tracks$popularity %in% 90:100]
tracks$name[tracks$popularity %in% 90]
tracks$artists[tracks$popularity %in% 90:100]
tracks$artists[tracks$popularity %in% 95:100]
tracks$name[tracks$popularity %in% 95:100]
tracks$artists[tracks$popularity %in% 95:101]
tracks$artists[tracks$popularity %in% 95:101]
tracks$name[tracks$popularity %in% 95:101]
tracks$artists[tracks$popularity %in% 95:100]
tracks$name[tracks$popularity %in% 95:100]
tracks$name[tracks$popularity %in% 100]
tracks$name[tracks$popularity == 100]
tracks$name[tracks$popularity %in% 100]
tracks$name[tracks$popularity %in% 99]
tracks$name[tracks$popularity %in% 98]
tracks$artists[tracks$popularity %in% 95]
tracks[tracks$popularity %in% 95:100]
tracks[, tracks$popularity %in% 95:100]
tracks[tracks$popularity %in% 95:100, ]
tracks$name[sort(tracks$popularity %in% 95:100)]
tracks$name[tracks$popularity %in% 95:100]
tracks$artists[tracks$popularity %in% 95:100]
tracks$name[tracks$popularity %in% 95:100]
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
tracks = read.csv("tracks.csv")
names(tracks)
dim(tracks)
sum(is.na(tracks))
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
tracks = tracks[, !names(tracks) %in% c("id", "id_artists")] # drop column names by their names
names(tracks)
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
numeric.cols = names(tracks)[column.types != "character"]
numeric.cols
library(ggplot2)
library(gridExtra)
grid.arrange(
ggplot(tracks, aes(x = duration_ms)) + geom_density(),
ggplot(tracks, aes(x = explicit)) + geom_density(),
ggplot(tracks, aes(x = danceability)) + geom_density(),
ggplot(tracks, aes(x = energy)) + geom_density(),
ggplot(tracks, aes(x = key)) + geom_density(),
ggplot(tracks, aes(x = loudness)) + geom_density(),
ggplot(tracks, aes(x = mode)) + geom_density(),
ggplot(tracks, aes(x = speechiness)) + geom_density(),
ggplot(tracks, aes(x = acousticness)) + geom_density(),
ggplot(tracks, aes(x = instrumentalness)) + geom_density(),
ggplot(tracks, aes(x = liveness)) + geom_density(),
ggplot(tracks, aes(x = valence)) + geom_density(),
ggplot(tracks, aes(x = tempo)) + geom_density(),
ggplot(tracks, aes(x = time_signature)) + geom_density())
ggplot(tracks, aes(x = explicit)) + geom_density()
unique(tracks$explicit)
tracks$explicit = replace(tracks$explicit, tracks$explicit != 0, "Explicit")
tracks$explicit = replace(tracks$explicit, tracks$explicit == 0, "Not Explicit")
unique(tracks$explicit)
tracks$explicit = as.factor(tracks$explicit) # factor so easier to work with later
ggplot(tracks, aes(x = key)) + geom_density()
unique(tracks$key)
tracks$key = as.factor(tracks$key)
unique(tracks$key)
ggplot(tracks, aes(x = mode)) + geom_density()
unique(tracks$mode)
tracks$mode = replace(tracks$mode, tracks$mode != 0, "Major")
tracks$mode = replace(tracks$mode, tracks$mode == 0, "Minor")
unique(tracks$mode)
tracks$mode = as.factor(tracks$mode) # factor so easier to work with later
ggplot(tracks, aes(x = instrumentalness)) + geom_density()
head(tracks$instrumentalness)
ggplot(tracks, aes(time_signature)) + geom_density()
unique(tracks$time_signature)
ggplot(tracks, aes(x = popularity)) + geom_density()
table(tracks$popularity)
tracks$artists[tracks$popularity %in% 95:100]
tracks$name[tracks$popularity %in% 95:100]
View(tacks)
View(tracks)
unique(tracks$popularity)
dim(tracks)
table(tracks$popularity)
tracks[tracks$popularity %in% 95:100, ]
data.frame(tracks[tracks$popularity %in% 95:100, ])
tracks[tracks$popularity %in% 95:100, ]
table(tracks[tracks$popularity %in% 95:100, ])
tracks[tracks$popularity %in% 95:100, ]
tracks$artists[tracks$popularity %in% 90:100]
tracks$name[tracks$popularity %in% 90:100]
tracks$artists[tracks$popularity %in% 90:100]
tracks$name[tracks$popularity %in% 90:100]
tracks[tracks$popularity %in% 90:100, ]
tracks[tracks$popularity %in% 95:100, ]
tracks[tracks$popularity %in% 90:100, ]
knitr::opts_chunk$set(echo = TRUE)
tracks = read.csv("tracks.csv")
names(tracks)
dim(tracks)
sum(is.na(tracks))
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
tracks = tracks[, !names(tracks) %in% c("id", "id_artists")] # drop column names by their names
names(tracks)
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
numeric.cols = names(tracks)[column.types != "character"]
numeric.cols
library(ggplot2)
library(gridExtra)
grid.arrange(
ggplot(tracks, aes(x = duration_ms)) + geom_density(),
ggplot(tracks, aes(x = explicit)) + geom_density(),
ggplot(tracks, aes(x = danceability)) + geom_density(),
ggplot(tracks, aes(x = energy)) + geom_density(),
ggplot(tracks, aes(x = key)) + geom_density(),
ggplot(tracks, aes(x = loudness)) + geom_density(),
ggplot(tracks, aes(x = mode)) + geom_density(),
ggplot(tracks, aes(x = speechiness)) + geom_density(),
ggplot(tracks, aes(x = acousticness)) + geom_density(),
ggplot(tracks, aes(x = instrumentalness)) + geom_density(),
ggplot(tracks, aes(x = liveness)) + geom_density(),
ggplot(tracks, aes(x = valence)) + geom_density(),
ggplot(tracks, aes(x = tempo)) + geom_density(),
ggplot(tracks, aes(x = time_signature)) + geom_density())
ggplot(tracks, aes(x = explicit)) + geom_density()
unique(tracks$explicit)
tracks$explicit = replace(tracks$explicit, tracks$explicit != 0, "Explicit")
tracks$explicit = replace(tracks$explicit, tracks$explicit == 0, "Not Explicit")
unique(tracks$explicit)
tracks$explicit = as.factor(tracks$explicit) # factor so easier to work with later
ggplot(tracks, aes(x = key)) + geom_density()
unique(tracks$key)
tracks$key = as.factor(tracks$key)
unique(tracks$key)
ggplot(tracks, aes(x = mode)) + geom_density()
unique(tracks$mode)
tracks$mode = replace(tracks$mode, tracks$mode != 0, "Major")
tracks$mode = replace(tracks$mode, tracks$mode == 0, "Minor")
unique(tracks$mode)
tracks$mode = as.factor(tracks$mode) # factor so easier to work with later
ggplot(tracks, aes(x = instrumentalness)) + geom_density()
head(tracks$instrumentalness)
ggplot(tracks, aes(time_signature)) + geom_density()
unique(tracks$time_signature)
ggplot(tracks, aes(x = popularity)) + geom_density()
table(tracks$popularity)
tracks$artists[tracks$popularity %in% 90:100]
tracks$name[tracks$popularity %in% 90:100]
tracks[tracks$popularity %in% 90:100, ]
head(tracks[tracks$popularity %in% 90:100, ])
tracks[tracks$popularity %in% 90:100, ]
# test
library(purrr)
mtcars
# test
library(purrr)
library(tidyr)
library(ggplot2)
tracks %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
summary(tracks$artists[tracks$popularity %in% 90:100])
tracks$artists[tracks$popularity %in% 90:100]
head(tracks[tracks$popularity %in% 90:100, ])
knitr::opts_chunk$set(echo = TRUE)
# alternatively
library(purrr)
library(tidyr)
library(ggplot2)
tracks %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
rm(list = ls)
rm(list = ls())
setwd("~/Desktop/Predicting-Music-Popularity")
tracks = read.csv("tracks.csv")
names(tracks)
dim(tracks)
sum(is.na(tracks))
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
tracks = tracks[, !names(tracks) %in% c("id", "id_artists")] # drop column names by their names
names(tracks)
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
numeric.cols = names(tracks)[column.types != "character"]
numeric.cols
library(ggplot2)
# library(gridExtra)
# grid.arrange(
#   ggplot(tracks, aes(x = duration_ms)) + geom_density(),
#   ggplot(tracks, aes(x = explicit)) + geom_density(),
#   ggplot(tracks, aes(x = danceability)) + geom_density(),
#   ggplot(tracks, aes(x = energy)) + geom_density(),
#   ggplot(tracks, aes(x = key)) + geom_density(),
#   ggplot(tracks, aes(x = loudness)) + geom_density(),
#   ggplot(tracks, aes(x = mode)) + geom_density(),
#   ggplot(tracks, aes(x = speechiness)) + geom_density(),
#   ggplot(tracks, aes(x = acousticness)) + geom_density(),
#   ggplot(tracks, aes(x = instrumentalness)) + geom_density(),
#   ggplot(tracks, aes(x = liveness)) + geom_density(),
#   ggplot(tracks, aes(x = valence)) + geom_density(),
#   ggplot(tracks, aes(x = tempo)) + geom_density(),
#   ggplot(tracks, aes(x = time_signature)) + geom_density())
# alternatively
library(purrr)
library(tidyr)
library(ggplot2)
tracks %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~ key, scales = "free") +
geom_histogram()
library(ggplot2)
library(gridExtra)
grid.arrange(
ggplot(tracks, aes(x = duration_ms)) + geom_density(),
ggplot(tracks, aes(x = explicit)) + geom_density(),
ggplot(tracks, aes(x = danceability)) + geom_density(),
ggplot(tracks, aes(x = energy)) + geom_density(),
ggplot(tracks, aes(x = key)) + geom_density(),
ggplot(tracks, aes(x = loudness)) + geom_density(),
ggplot(tracks, aes(x = mode)) + geom_density(),
ggplot(tracks, aes(x = speechiness)) + geom_density(),
ggplot(tracks, aes(x = acousticness)) + geom_density(),
ggplot(tracks, aes(x = instrumentalness)) + geom_density(),
ggplot(tracks, aes(x = liveness)) + geom_density(),
ggplot(tracks, aes(x = valence)) + geom_density(),
ggplot(tracks, aes(x = tempo)) + geom_density(),
ggplot(tracks, aes(x = time_signature)) + geom_density())
ggplot(tracks, aes(x = explicit)) + geom_density()
knitr::opts_chunk$set(echo = TRUE)
tracks = read.csv("tracks.csv")
names(tracks)
dim(tracks)
sum(is.na(tracks))
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
tracks = tracks[, !names(tracks) %in% c("id", "id_artists")] # drop column names by their names
names(tracks)
column.types = c()
for (i in 1:ncol(tracks)) {
column.types = append(column.types, typeof(tracks[, i]))
}
column.types
numeric.cols = names(tracks)[column.types != "character"]
numeric.cols
library(ggplot2)
library(gridExtra)
grid.arrange(
ggplot(tracks, aes(x = duration_ms)) + geom_density(),
ggplot(tracks, aes(x = explicit)) + geom_density(),
ggplot(tracks, aes(x = danceability)) + geom_density(),
ggplot(tracks, aes(x = energy)) + geom_density(),
ggplot(tracks, aes(x = key)) + geom_density(),
ggplot(tracks, aes(x = loudness)) + geom_density(),
ggplot(tracks, aes(x = mode)) + geom_density(),
ggplot(tracks, aes(x = speechiness)) + geom_density(),
ggplot(tracks, aes(x = acousticness)) + geom_density(),
ggplot(tracks, aes(x = instrumentalness)) + geom_density(),
ggplot(tracks, aes(x = liveness)) + geom_density(),
ggplot(tracks, aes(x = valence)) + geom_density(),
ggplot(tracks, aes(x = tempo)) + geom_density(),
ggplot(tracks, aes(x = time_signature)) + geom_density())
ggplot(tracks, aes(x = explicit)) + geom_density()
unique(tracks$explicit)
tracks$explicit = replace(tracks$explicit, tracks$explicit != 0, "Explicit")
tracks$explicit = replace(tracks$explicit, tracks$explicit == 0, "Not Explicit")
unique(tracks$explicit)
tracks$explicit = as.factor(tracks$explicit) # factor so easier to work with later
ggplot(tracks, aes(x = key)) + geom_density()
unique(tracks$key)
tracks$key = as.factor(tracks$key)
unique(tracks$key)
ggplot(tracks, aes(x = mode)) + geom_density()
unique(tracks$mode)
tracks$mode = replace(tracks$mode, tracks$mode != 0, "Major")
tracks$mode = replace(tracks$mode, tracks$mode == 0, "Minor")
unique(tracks$mode)
tracks$mode = as.factor(tracks$mode) # factor so easier to work with later
ggplot(tracks, aes(x = instrumentalness)) + geom_density()
head(tracks$instrumentalness)
ggplot(tracks, aes(time_signature)) + geom_density()
unique(tracks$time_signature)
ggplot(tracks, aes(x = popularity)) + geom_density()
table(tracks$popularity)
tracks$artists[tracks$popularity %in% 90:100]
tracks$name[tracks$popularity %in% 90:100]
head(tracks[tracks$popularity %in% 90:100, ])
tracks[tracks$popularity %in% 90:100, ]
